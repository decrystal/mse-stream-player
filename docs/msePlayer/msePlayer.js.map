{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/.mitt@1.1.3/dist/mitt.es.js","webpack:///./src/mse.ts","webpack:///./src/mediaElement.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","mitt_es","all","create","on","type","handler","push","off","splice","indexOf","emit","evt","slice","map","msePlayer","this","propertys","methods","events","MediaElement","videoElement","_addProperty","_addMethods","_addEvents","index","length","method","_this","event_1","this_1","addEventListener","e","emitter","src_MsePlayer","MsePlayer","options","__assign","DEFAULTS","document","querySelector","target","mitt_es_namespaceObject","_init","url","mse","mediaElement","window","__webpack_exports__"],"mappings":"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","file":"msePlayer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","export default class MSE {\n    private msePlayer: any;\n    \n    constructor(msePlayer: any) {\n        this.msePlayer = msePlayer;\n\t}\n}","export const propertys: string[] = [\n\t'audioTracks',\n\t'autoplay',\n\t'buffered',\n\t'controller',\n\t'controls',\n\t'crossOrigin',\n\t'currentSrc',\n\t'currentTime',\n\t'defaultMuted',\n\t'defaultPlaybackRate',\n\t'duration',\n\t'ended',\n\t'error',\n\t'loop',\n\t'mediaGroup',\n\t'muted',\n\t'networkState',\n\t'paused',\n\t'playbackRate',\n\t'played',\n\t'preload',\n\t'readyState',\n\t'seekable',\n\t'seeking',\n\t'src',\n\t'startDate',\n\t'textTracks',\n\t'videoTracks',\n\t'volume'\n];\n\nexport const methods: string[] = [\n\t'addTextTrack',\n\t'canPlayType',\n\t'load',\n\t'play',\n\t'pause'\n];\n\nexport const events: string[] = [\n\t'abort',\n\t'canplay',\n\t'canplaythrough',\n\t'durationchange',\n\t'emptied',\n\t'ended',\n\t'error',\n\t'loadeddata',\n\t'loadedmetadata',\n\t'loadstart',\n\t'pause',\n\t'play',\n\t'playing',\n\t'progress',\n\t'ratechange',\n\t'seeked',\n\t'seeking',\n\t'stalled',\n\t'suspend',\n\t'timeupdate',\n\t'volumechange',\n\t'waiting'\n];\n\nexport default class MediaElement {\n\tprivate msePlayer: any;\n\tprivate videoElement: HTMLVideoElement;\n\t[prop: string]: any;\n\n\tconstructor(msePlayer: any) {\n\t\tthis.msePlayer = msePlayer;\n\t\tthis.videoElement = msePlayer.videoElement;\n\t\tthis._addProperty();\n\t\tthis._addMethods();\n\t\tthis._addEvents();\n\t}\n\n\tprivate _addProperty(): void {\n\t\tfor (let index = 0; index < propertys.length; index++) {\n\t\t\tlet property = propertys[index];\n\t\t\t// @ts-ignore\n\t\t\tthis[property] = this.videoElement[property];\n\t\t}\n\t}\n\n\tprivate _addMethods(): void {\n\t\tfor (let index = 0; index < methods.length; index++) {\n\t\t\tlet method = methods[index];\n\t\t\t// @ts-ignore\n\t\t\tthis[method] = this.videoElement[method];\n\t\t}\n\t}\n\n\tprivate _addEvents(): void {\n\t\tfor (let index = 0; index < events.length; index++) {\n\t\t\tlet event = events[index];\n\t\t\tthis.videoElement.addEventListener(event, (e: Event) => {\n\t\t\t\tthis.msePlayer.emitter.emit(event, e);\n\t\t\t});\n\t\t}\n\t}\n}\n","import * as mitt from 'mitt';\nimport MSE from './mse';\nimport MediaElement, { propertys, methods, events } from './mediaElement';\n\ninterface Options {\n\ttarget: string;\n\ttype: string;\n\turl: string;\n}\n\nclass MsePlayer {\n\tprivate options: Options;\n\tprivate videoElement: HTMLVideoElement;\n\tprivate mediaElement: any;\n\tprivate mse: any;\n\tprivate emitter: any;\n\n\tconstructor(options: Options) {\n\t\tthis.options = {\n\t\t\t...MsePlayer.DEFAULTS,\n\t\t\t...options\n\t\t};\n\n\t\tthis.videoElement = <HTMLVideoElement>document.querySelector(this.options.target);\n\n\t\t// @ts-ignore\n\t\tthis.emitter = mitt();\n\t\tthis._init();\n\t}\n\n\tprivate static get DEFAULTS(): Options {\n\t\treturn {\n\t\t\ttarget: '',\n\t\t\ttype: '',\n\t\t\turl: ''\n\t\t};\n\t}\n\n\tprivate _init() {\n\t\tthis.mse = new MSE(this);\n\t\tthis.mediaElement = new MediaElement(this);\n\t\t// console.log(this);\n\t}\n}\n\n(<any>window).MsePlayer = MsePlayer;\nexport default MsePlayer;\n"],"sourceRoot":""}